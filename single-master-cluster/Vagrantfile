Vagrant.configure(2) do |config|

 # Kubernetes Master Server
 config.vm.define "master1" do |master|
 
   master.vm.box               = "centos/7"
   master.vm.box_check_update  = false
   master.vm.hostname          = "master1.example.com"
   master.vm.network "private_network", ip: "172.16.16.100"
 
   master.vm.provider :virtualbox do |v|
     v.name    = "master1"
     v.memory  = 4096
     v.cpus    =  2
     v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
   end
 end
  
 # Kubernetes Worker1 Server
 config.vm.define "worker1" do |worker1|
 
   worker1.vm.box               = "centos/7"
   worker1.vm.box_check_update  = false
   worker1.vm.hostname          = "worker1.example.com"
   worker1.vm.network "private_network", ip: "172.16.16.103"
 
   worker1.vm.provider :virtualbox do |v|
     v.name    = "worker1"
     v.memory  = 2000
     v.cpus    =  1
     v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
   end
 end
  
  # Kubernetes Worker2 Server
 config.vm.define "worker1" do |worker2|
 
   worker2.vm.box               = "centos/7"
   worker2.vm.box_check_update  = false
   worker2.vm.hostname          = "worker2.example.com"
   worker2.vm.network "private_network", ip: "172.16.16.103"
 
   worker2.vm.provider :virtualbox do |v|
     v.name    = "worker2"
     v.memory  = 2000
     v.cpus    =  1
     v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
   end
 end

end

 # Use below Commands to bring VM up and ssh to it.
 # 1. vagrant up 
 # 2. vagrant ssh <node-name> i.e vagrant ssh master1 
